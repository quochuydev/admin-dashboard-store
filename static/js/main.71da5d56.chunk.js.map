{"version":3,"sources":["utils/config.js","utils/upload-adapter.js","components/Editor/index.jsx","components/DropZone/DropZoneComponent.jsx","components/DropZone/index.jsx","pages/admin/products/new/Variants.jsx","pages/admin/products/new/ProductType.jsx","pages/admin/products/new/Options.jsx","pages/admin/products/new/index.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["process","UploadAdapter","loader","this","a","data","FormData","file","append","Promise","resolve","reject","axios","url","config","method","then","res","resData","default","files","console","log","catch","error","Editor","initValue","onData","readOnly","ckfinder","uploadUrl","server","editor","ClassicEditor","onReady","plugins","get","createUploadAdapter","onChange","evt","getData","DropZoneComponent","props","handleDropZoneDrop","validImageTypes","fileUpload","length","DropZone","FileUpload","uploadedFiles","Stack","vertical","map","index","alignment","Thumbnail","size","alt","name","source","includes","type","window","URL","createObjectURL","NoteMinor","Caption","onDrop","useState","setFiles","useCallback","_dropFiles","acceptedFiles","_rejectedFiles","upload","newfiles","Variant","variant","selectedResources","handleChange","id","title","price","sku","barcode","image","imageId","IndexTable","Row","selected","position","Cell","TextField","value","String","React","memo","Variants","variants","product","useIndexResourceState","allResourcesSelected","handleSelectionChange","promotedBulkActions","content","onAction","bulkActions","newVariants","e","i","rowMarkup","key","Card","resourceName","singular","plural","itemCount","selectedItemsCount","onSelectionChange","headings","AutocompleteComponent","selectedOptions","allowMultiple","deselectedOptions","label","inputValue","setInputValue","options","setOptions","loading","setLoading","updateText","setTimeout","filterRegex","RegExp","resultOptions","filter","option","match","updateSelection","join","textField","Autocomplete","placeholder","emptyState","Icon","SearchMinor","style","textAlign","TextContainer","onSelect","Options","setSelected","selectedTags","setSelectedTags","handleSelectChange","removeTag","tag","previousTags","previousTag","tagMarkup","Tag","onRemove","DataTable","columnContentTypes","rows","Select","spacing","OfficeProductNew","handle","description","productType","vendor","tags","setData","useEffect","NEXT_PUBLIC_SERVER_URL","response","items","setFieldValue","checked","setChecked","newChecked","onSubmit","preventDefault","Layout","Section","JSON","stringify","Checkbox","Button","submit","secondary","ProductType","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppProvider","i18n","enTranslations","document","getElementById"],"mappings":"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","file":"static/js/main.71da5d56.chunk.js","sourcesContent":["export default {\n  server: process.env.REACT_APP_BACKEND_URL || \"http://localhost:5000\",\n};\n","import axios from \"axios\";\nimport config from \"./config\";\n\nexport default class UploadAdapter {\n  constructor(loader) {\n    this.loader = loader;\n  }\n\n  async upload() {\n    const data = new FormData();\n    const file = await this.loader.file;\n    data.append(\"files\", file);\n    return new Promise((resolve, reject) => {\n      axios({\n        url: `${config.server}/files`,\n        method: \"post\",\n        data,\n      })\n        .then((res) => {\n          var resData = res.data;\n          resData.default = resData.files[0].url;\n          console.log(\"resData.files[0].url\", resData.files[0].url);\n          resolve(resData);\n        })\n        .catch((error) => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  }\n\n  abort() {}\n}\n","import React from 'react';\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport UploadAdapter from \"../../utils/upload-adapter\";\nimport config from \"../../utils/config\";\n\nconst Editor = ({ initValue, readOnly, onData }) => {\n  const handleChange = (evt, editor) => {\n    onData(editor.getData());\n  };\n\n  const config = {\n    ckfinder: {\n      uploadUrl: `${config.server}/files`,\n    },\n  };\n\n  const onReady = (editor) => {\n    editor.plugins.get(\"FileRepository\").createUploadAdapter = function (loader) {\n      return new UploadAdapter(loader);\n    };\n  };\n\n  return (\n    <CKEditor\n      editor={ClassicEditor}\n      data={initValue}\n      onReady={onReady}\n      config={config}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Editor;\n","import { DropZone, Stack, Thumbnail, Caption } from \"@shopify/polaris\";\nimport { NoteMinor } from '@shopify/polaris-icons';\n\nexport default DropZoneComponent;\n\nfunction DropZoneComponent(props) {\n    const { files, handleDropZoneDrop } =props\n    const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n  \n    const fileUpload = !files.length && <DropZone.FileUpload />;\n    const uploadedFiles = files.length > 0 && (\n      <Stack vertical>\n        {files.map((file, index) => (\n          <Stack alignment=\"center\" key={index}>\n            <Thumbnail\n              size=\"small\"\n              alt={file.name}\n              source={\n                validImageTypes.includes(file.type)\n                  ? window.URL.createObjectURL(file)\n                  : NoteMinor\n              }\n            />\n            <div>\n              {file.name} <Caption>{file.size} bytes</Caption>\n            </div>\n          </Stack>\n        ))}\n      </Stack>\n    );\n  \n    return (\n      <DropZone onDrop={handleDropZoneDrop}>\n        {uploadedFiles}\n        {fileUpload}\n      </DropZone>\n    );\n  }","import { useState, useCallback } from \"react\";\nimport DropZoneComponent from './DropZoneComponent'\n\nexport default DropZone;\n\nfunction DropZone(props) {\n  const [files, setFiles] = useState([]);\n\n  const handleDropZoneDrop = useCallback(\n    async (_dropFiles, acceptedFiles, _rejectedFiles) => {\n      if(props.upload){\n        const newfiles = await props.upload(acceptedFiles);\n        return setFiles((files) => [...files, ...newfiles])\n      }\n      return setFiles((files) => [...files, ...acceptedFiles])\n    },\n    [],\n  );\n\n  return <DropZoneComponent files={files} handleDropZoneDrop={handleDropZoneDrop} />\n}","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useIndexResourceState, IndexTable, Card, TextField, Thumbnail } from \"@shopify/polaris\";\nimport { NoteMinor } from '@shopify/polaris-icons';\n\nfunction Variant(props){\n  const { variant, index, selectedResources, handleChange } = props\n  const { id, title, price, sku, barcode, imageId, image } = variant;\n\n  return <IndexTable.Row\n    id={id}\n    key={id}\n    selected={selectedResources.includes(id)}\n    position={index}\n  >\n    <IndexTable.Cell>\n        <Thumbnail source={image || NoteMinor} />  \n    </IndexTable.Cell>\n    <IndexTable.Cell>\n        <TextField value={title} onChange={value => handleChange(index, 'title', value)} />\n    </IndexTable.Cell>\n    <IndexTable.Cell>\n        <TextField value={String(price)} onChange={value => handleChange(index, 'price', value)} type=\"number\" />\n    </IndexTable.Cell>\n    <IndexTable.Cell>\n        <TextField value={sku} onChange={value => handleChange(index, 'sku', value)} />\n    </IndexTable.Cell>\n    <IndexTable.Cell>\n        <TextField value={barcode} onChange={value => handleChange(index, 'barcode', value)} />\n    </IndexTable.Cell>\n  </IndexTable.Row>\n}\n\nexport default React.memo(Variants);\n\nfunction Variants(props) {\n  const { product } = props;\n  const { variants } = product;\n  \n  const resourceName = {\n    singular: 'variant',\n    plural: 'variants',\n  };\n\n  const {\n    selectedResources,\n    allResourcesSelected,\n    handleSelectionChange,\n  } = useIndexResourceState(variants);\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit variants',\n      onAction: () => console.log('Todo: implement bulk edit', selectedResources),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Delete variants',\n      onAction: () => console.log('Todo: implement bulk delete', selectedResources),\n    },\n  ];\n\n  const handleChange = useCallback((index, name, value) => {\n    const newVariants = variants.map((e, i) => (i === index ? ({ ...e, [name]: value }) : e));\n    props.onData(newVariants);\n  }, [variants]);\n\n  const rowMarkup = variants.map(\n    (variant, index) => <Variant {...{ variant, index, selectedResources, handleChange, key: index }}/>\n  );\n\n  const headings = [\n    {title: 'Image'},\n    {title: 'Title'},\n    {title: 'Price'},\n    {title: 'SKU'}\n  ]\n\n  return (\n    <Card>\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={variants.length}\n        selectedItemsCount={allResourcesSelected ? 'All' : selectedResources.length}\n        onSelectionChange={handleSelectionChange}\n        bulkActions={bulkActions}\n        promotedBulkActions={promotedBulkActions}\n        headings={headings}\n      >\n        {rowMarkup}\n      </IndexTable>\n    </Card>\n  );\n}","import React, { useState, useCallback } from \"react\";\nimport { Icon, TextContainer, Autocomplete } from \"@shopify/polaris\";\nimport { SearchMinor } from '@shopify/polaris-icons';\n\nexport default React.memo(AutocompleteComponent);\n\nfunction AutocompleteComponent(props) {\n  const { value: selectedOptions, allowMultiple = false } = props;\n\n  const deselectedOptions = [\n    {value: 'type1', label: 'Type 1'},\n    {value: 'type2', label: 'Type 2'},\n    {value: 'type3', label: 'Type 3'},\n  ];\n\n  const [inputValue, setInputValue] = useState(selectedOptions);\n  const [options, setOptions] = useState(deselectedOptions);\n  const [loading, setLoading] = useState(false);\n\n  const updateText = useCallback(\n    (value) => {\n      setInputValue(value);\n\n      if (!loading) {\n        setLoading(true);\n      }\n\n      setTimeout(() => {\n        if (value === '') {\n          setOptions(deselectedOptions);\n          setLoading(false);\n          return;\n        }\n        const filterRegex = new RegExp(value, 'i');\n        const resultOptions = options.filter((option) =>\n          option.label.match(filterRegex),\n        );\n        setOptions(resultOptions);\n        setLoading(false);\n      }, 300);\n    },\n    [deselectedOptions, loading, options],\n  );\n\n  const updateSelection = useCallback(\n    (selected) => {\n      props.onData(selected)\n      setInputValue(allowMultiple ? selected.join(', ') : selected[0]);\n    },\n    [options],\n  );\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label=\"Product type\"\n      value={inputValue}\n      placeholder=\"exp: T-Shirt\"\n    />\n  );\n\n  // TODO change to add new\n  const emptyState = (\n    <>\n      <Icon source={SearchMinor} />\n      <div style={{textAlign: 'center'}}>\n        <TextContainer>Could not find any results</TextContainer>\n      </div>\n    </>\n  );\n\n  return (\n    <Autocomplete\n      allowMultiple={allowMultiple}\n      options={options}\n      selected={selectedOptions}\n      onSelect={updateSelection}\n      emptyState={emptyState}\n      loading={loading}\n      textField={textField}\n    />\n  );\n}","import React, { useState, useCallback } from \"react\";\nimport { Select, Stack, DataTable, Tag } from \"@shopify/polaris\";\n\nexport default function Options(props) {\n    const options = [\n        { label: 'Size', value: 'Size' },\n        { label: 'Color', value: 'Color' },\n    ];\n    \n    const [selected, setSelected] = useState('Size');\n    const [selectedTags, setSelectedTags] = useState(['M', 'L']);\n\n    const handleSelectChange = useCallback((value) => setSelected(value), []);\n\n    const removeTag = useCallback(\n        (tag) => () => {\n            setSelectedTags((previousTags) =>\n                previousTags.filter((previousTag) => previousTag !== tag),\n            );\n        },\n        [],\n    );\n\n    const tagMarkup = selectedTags.map((option) => (\n        <Tag key={option} onRemove={removeTag(option)}>{option}</Tag>\n    ));\n\n    return (<DataTable columnContentTypes={['text', 'text']} headings={['', '']}\n        rows={[\n            [<Select options={options} onChange={handleSelectChange} value={selected} />, \n                <Stack spacing=\"tight\">{tagMarkup}</Stack>],\n            [<Select options={options} onChange={handleSelectChange} value={selected} />, \n                <Stack spacing=\"tight\">{tagMarkup}</Stack>],\n        ]}\n    />)\n}","import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Layout, Button, Checkbox, TextField } from \"@shopify/polaris\";\n\nimport Editor from '../../../../components/Editor'\nimport DropZone from '../../../../components/DropZone'\nimport Variants from './Variants'\nimport ProductType from './ProductType'\nimport Vendor from './ProductType'\nimport Tags from './ProductType'\nimport Options from './Options'\n\nexport default function OfficeProductNew() {\n  const [data, setData] = useState({\n    title: null,\n    handle: null,\n    description: null,\n    variants: [\n      {\n        image: null,\n        title: null,\n        sku: null,\n        price: 0,\n      },\n    ],\n    productType: 'type1',\n    vendor: 'type1',\n    tags: []\n  });\n\n  useEffect(() => {\n    const options = {\n      method: \"get\",\n      url: `${process.env.NEXT_PUBLIC_SERVER_URL}/orders`,\n    }\n    axios(options)\n      .then(function (response) {\n        console.log(response.data?.items);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  function onSubmit(e) {\n    e.preventDefault()\n    console.log(data);\n\n    const options = {\n      method: \"get\",\n      url: `${process.env.NEXT_PUBLIC_SERVER_URL}/products`,\n    }\n    axios(options)\n      .then(function (response) {\n        console.log(response.data?.items);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const setFieldValue = useCallback(\n    (name, value) => setData(data => ({ ...data, [name]: value })),\n    [],\n  );\n\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback((newChecked) => setChecked(newChecked), []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <Layout>\n          <Layout.Section>\n            <p>{JSON.stringify(data)}</p>\n            <TextField label=\"Title\" value={data.title} onChange={e => setFieldValue('title', e)} />\n            <Editor initValue={data.description} onData={e => setFieldValue('description', e)} />\n            <DropZone product={data} />\n            <Checkbox label=\"Product has many variants\" checked={checked} onChange={handleChange} />\n            <Options product={data} />\n            <Variants product={data} onData={e => setFieldValue('variants', e)}/>\n            <Button submit>Save</Button>\n          </Layout.Section>\n          <Layout.Section secondary>\n            <ProductType value={data.productType} onData={e => setFieldValue('productType', ...e)}/>\n            <Vendor value={data.vendor} onData={e => setFieldValue('vendor', ...e)}/>\n            <Tags value={data.tags} onData={e => setFieldValue('tags', e)} allowMultiple={true}/>\n          </Layout.Section>\n        </Layout>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nimport OfficeProductsNew from \"./pages/admin/products/new\";\n\nfunction App() {\n  return (\n    <div>\n      <OfficeProductsNew />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport enTranslations from \"@shopify/polaris/locales/en.json\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport \"@shopify/polaris/dist/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider i18n={enTranslations}>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}